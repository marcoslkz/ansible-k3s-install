- name: Install ingressroute
  hosts: all
  vars:
    DOMAIN_NAME: "{{ lookup('env', 'ARGO_DOMAIN_NAME')  }}"
    ORA_FINGERPRINT: "{{ lookup('env', 'ARGO_DOMAIN_NAME')  }}"
    ORA_PRIVKEY: "{{ lookup('env', 'ORA_PRIVKEY')  }}"
    ORA_REGION: "{{ lookup('env', 'ORA_REGION')  }}"
    ORA_TENANCY: "{{ lookup('env', 'ORA_TENANCY')  }}"
    ORA_VAULT: "{{ lookup('env', 'ORA_VAULT')  }}"
    ORA_USER: "{{ lookup('env', 'ORA_USER')  }}"
  tasks:
  - name: Copy the ingress YAML file
    template:
      src: k8s/argocd-ingressroute.yaml
      dest: /tmp/argocd-ingressroute.yaml
  - name: Copy the letsencrypt YAML file
    template:
      src: k8s/letsencrypt.yaml
      dest: /tmp/letsencrypt.yaml
  - name: Copy the root app YAML file
    template:
      src: apps/templates/root.yaml
      dest: /tmp/root.yaml
  - name: kubectl tls letsencrypt
    kubernetes.core.k8s:
      state: present
      src: /tmp/letsencrypt.yaml
      apply: true
  - name: kubectl argo ingress
    kubernetes.core.k8s:
      state: present
      src: /tmp/argocd-ingressroute.yaml
      apply: true
  - name: kubectl root app
    kubernetes.core.k8s:
      state: present
      src: /tmp/root.yaml
      apply: true
  - name: kubectl secret
    kubernetes.core.k8s:
      state: present
      definition: 
        apiVersion: v1
        kind: Secret
        type: Opaque             
        metadata:
          name: oracle-secret
          namespace: argocd    
        stringData:
          privateKey: "{{ ORA_PRIVKEY }}"
          fingerprint: "{{ ORA_FINGERPRINT }}"
    register: config_secret
  - name: Copy the external Secrets YAML file
    template:
      src: k8s/cluster-secrets.yaml
      dest: /tmp/external.yaml
  - name: kubectl external secrets
    kubernetes.core.k8s:
      state: present
      src: /tmp/external.yaml
      apply: true